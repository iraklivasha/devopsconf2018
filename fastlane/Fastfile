# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

lane :update_all do 
  # fastlane
    update_fastlane
    
    # CocoaPods
    cocoapods
end

platform :ios do

  desc "Test and generate code coverage report"
  lane :test do |values|

    update_all

    workspace = "devopsconf2018"
    scheme = "devopsconf2018Tests"
    
    scan(
      workspace: "#{workspace}.xcworkspace",
      scheme: scheme,
      configuration: "Debug",
      output_types: "html,junit",
      output_directory: "scan_output",
      device: "iPhone 8",
      clean: false,
      include_simulator_logs: false,
      open_report: false,
      code_coverage: true,
      derived_data_path: "./derivedData"
    )

    cov = values[:cov]

    if cov
      slather(
        workspace: "#{workspace}.xcworkspace",
        proj: "#{workspace}.xcodeproj",
        scheme: scheme,
        build_directory: "./derivedData",
        output_directory: "slather_output",
        html: true,
        show: true
      )
    end

    #Show rocket ASCII at the end
    #rocket
  end

  # TestFlight Lane
  desc "Build and submit to Testflight"
  lane :TestFlightBeta do |values|
  
    update_all
    
    scheme = "devopsconf2018"
  
    # setup current date and build DIR
    currentDate = Time.new.strftime("%Y.%m.%d")
    archivePATH = "./archives/#{scheme}#{currentDate}"
  
    gym(
        scheme: scheme,
      	configuration: "Release",
     	  workspace: "#{scheme}.xcworkspace",
     	  export_method: "app-store",
        export_team_id: "----",
      	skip_profile_detection: true,
        export_options:{
	         compileBitcode: true,
          	signingStyle: "manual",
	 	      provisioningProfiles:{
    	        	"com.devopsconf2018.fastlane": "Provisioning profile name"
	 		    }
	     },
        include_symbols: true,
        build_path: "./Build",
        archive_path: archivePATH
    )
  
    # Testflight
    testflight(
      username: "fastlane@devopsconf2018.com",
      app_identifier: "com.devopsconf2018.fastlane",
      changelog: "some notes (you can grab the changelog from git)",
      distribute_external: false,
      notify_external_testers: false,
      skip_submission: true,
      skip_waiting_for_build_processing: true
    )
  
    #Show rocket ASCII at the end
    #rocket
  end

  lane :analyze do
    swiftlint(
    mode: :lint,      # SwiftLint mode: :lint (default) or :autocorrect
    #path: "swiftlint.html",       # Specify path to lint (optional)
    output_file: "swiftlint.html", # The path of the output file (optional)
    # config_file: "swiftlint-ci.yml",     # The path of the configuration file (optional)
    reporter: "html",
    ignore_exit_status: true    # Allow fastlane to continue even if SwiftLint returns a non-zero exit status
  )
  end


  lane :certify do |options|

  team_id       = "----"
  keychain_name = options[:keychain]
  github_url    = "git@github.com:group/certificates.git" # or https

  identifiers = [ "com.devopsconf2018.fastlane" ]


  if keychain_name == nil
    keychain_name = "login.keychain"
  end

  match(git_url:        github_url,
        app_identifier: identifiers,
        git_branch:     "appstore",
        team_id:        team_id,
        readonly:       true,
        keychain_name:  keychain_name,
        type:           "appstore")

end

  end
